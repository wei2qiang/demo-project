<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gupaoedu.dao.BlogMapper">
  <resultMap id="BaseResultMap" type="com.gupaoedu.entity.Blog">
    <id column="bid" jdbcType="INTEGER" property="bid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="author_id" jdbcType="INTEGER" property="authorId" />
  </resultMap>
  <sql id="Base_Column_List">
    bid, name, author_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from blog
    where bid = #{bid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from blog
    where bid = #{bid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.gupaoedu.entity.Blog">
    insert into blog (bid, name, author_id
      )
    values (#{bid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{authorId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.gupaoedu.entity.Blog">
    insert into blog
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bid != null">
        bid,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="authorId != null">
        author_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bid != null">
        #{bid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="authorId != null">
        #{authorId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.gupaoedu.entity.Blog">
    update blog
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="authorId != null">
        author_id = #{authorId,jdbcType=INTEGER},
      </if>
    </set>
    where bid = #{bid,jdbcType=INTEGER}
  </update>




    <update id="updateByPrimaryKey" parameterType="com.gupaoedu.entity.Blog">
    update blog
    set name = #{name,jdbcType=VARCHAR},
      author_id = #{authorId,jdbcType=INTEGER}
    where bid = #{bid,jdbcType=INTEGER}
  </update>

    <!-- $只能用在自定义类型和map上 -->
    <select id="selectBlogByBean" parameterType="blog" resultType="blog">
        select bid, name, author_id authorId from blog where name = #{name}
    </select>
    <select id="selectBlogList" resultMap="BaseResultMap">
        select bid, name, author_id  from blog
    </select>


    <!--根据文章关联查询出作者，一对一的关联查询-->
    <resultMap id="BlogAndAuthorOneToOne" type="com.gupaoedu.entity.ext.BlogAndAuthor">
        <id column="bid" jdbcType="INTEGER" property="bid" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="author_id" jdbcType="VARCHAR" property="authorId" />
        <!-- 联合查询，将author的属性映射到ResultMap -->
        <association javaType="com.gupaoedu.entity.Author" property="author">
            <id column="author_id" property="authorId" />
            <result column="author_name" property="authorName" />
        </association>
    </resultMap>
    <select id="AuthorWithBlogWithCommentMap" resultMap="BlogAndAuthorOneToOne">
        select b.bid, b.name, b.author_id, a.author_id , a.author_name
        from blog b
        left join author a
        on b.author_id=a.author_id
        where b.bid = #{bid, jdbcType=INTEGER}
    </select>

    <!--根据作者查询作者的文章和文章的评论-->
    <resultMap id="AuthorWithBlogWithCommentMap" type="com.gupaoedu.entity.ext.AuthorAndBlog">
        <!--author-->
        <id column="author_id" property="authorId"></id>
        <result column="author_name" property="authorName"></result>
        <!--blog-->
        <collection property="blogList" ofType="com.gupaoedu.entity.ext.BlogAndComment">
            <id column="bid" property="bId"></id>
            <result column="name" property="name"></result>
            <result column="author_id" property="authorId"></result>
            <!--评论-->
            <collection property="commentList" ofType="com.gupaoedu.entity.Comment">
                <id column="comment_id" property="commentId" />
                <result column="content" property="content" />
                <result column="bid" property="bId" />
            </collection>
        </collection>
    </resultMap>

    <!-- 根据作者文章评论，多对多 -->
    <select id="selectAuthorWithBlogAndComment" resultMap="AuthorWithBlogWithCommentMap" >
        select b.bid, b.name, a.author_id, a.author_name, c.comment_id, c.content
        from blog b, author a, comment c
        where b.author_id = a.author_id and b.bid = c.bid
    </select>
</mapper>